/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package pt.rics.uninova.demo.gui;

import com.google.gson.Gson;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.eclipse.paho.client.mqttv3.MqttException;
import org.eclipse.paho.sample.mqttclient.mqttv3.MqttV3Client;
import org.eclipse.paho.sample.mqttclient.mqttv5.MqttV5Client;
import pt.rics.uninova.demo.data.model.SensorRecord;

/**
 *
 * @author joao
 */
public class SubscriberGUIFrame extends javax.swing.JFrame {

    MqttV3Client v3Executor;
    MqttV5Client v5Executor;
    boolean MqttV5 = false;
    
    /** Creates new form SubscriberGUIFrame
     * @param v3Executor
     * @param MqttV5
     */
    public SubscriberGUIFrame(MqttV3Client v3Executor, boolean MqttV5) {
        initComponents();
        this.v3Executor = v3Executor;
        this.MqttV5 = MqttV5;
        this.TitleLabel.setText("Subscriber MQTTv3");
    }
    
    public SubscriberGUIFrame(MqttV5Client v5Executor, boolean MqttV5) {
        initComponents();
        this.v5Executor = v5Executor;
        this.MqttV5 = MqttV5;
        this.TitleLabel.setText("Subscriber MQTTv5");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TitleLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        RecordsTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        LastMsgTextArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        TopicACheckBox = new javax.swing.JCheckBox();
        TopicBCheckBox = new javax.swing.JCheckBox();
        TopicCCheckBox = new javax.swing.JCheckBox();
        SubUnsubButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 500));

        TitleLabel.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        TitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TitleLabel.setText("Subscriber");

        RecordsTextArea.setColumns(20);
        RecordsTextArea.setRows(5);
        jScrollPane1.setViewportView(RecordsTextArea);

        LastMsgTextArea.setColumns(20);
        LastMsgTextArea.setRows(5);
        jScrollPane2.setViewportView(LastMsgTextArea);

        jLabel2.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Records");

        jLabel3.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Last Message Received");

        TopicACheckBox.setText("Topic A");
        TopicACheckBox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TopicACheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TopicACheckBoxActionPerformed(evt);
            }
        });

        TopicBCheckBox.setText("Topic B");
        TopicBCheckBox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TopicBCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TopicBCheckBoxActionPerformed(evt);
            }
        });

        TopicCCheckBox.setText("Topic C");
        TopicCCheckBox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TopicCCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TopicCCheckBoxActionPerformed(evt);
            }
        });

        SubUnsubButton.setText("Sub/UnSub");
        SubUnsubButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubUnsubButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)
                        .addGap(68, 68, 68))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(9, 9, 9)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TopicACheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(TopicBCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(TopicCCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(SubUnsubButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(251, 251, 251)
                .addComponent(TitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(252, 252, 252))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(TitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TopicACheckBox)
                    .addComponent(TopicBCheckBox)
                    .addComponent(TopicCCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SubUnsubButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TopicBCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TopicBCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TopicBCheckBoxActionPerformed

    private void TopicACheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TopicACheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TopicACheckBoxActionPerformed

    private void TopicCCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TopicCCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TopicCCheckBoxActionPerformed

    private void SubUnsubButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubUnsubButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<String> SubTopics = new ArrayList();
        ArrayList<Integer> qos = new ArrayList();
        ArrayList<String> UnsubTopics = new ArrayList();
        if(this.TopicACheckBox.isSelected()){
            SubTopics.add("SensorA");
            qos.add(0);
        } else UnsubTopics.add("SensorA");
        
        if(this.TopicBCheckBox.isSelected()){
            SubTopics.add("SensorB");
            qos.add(0);
        } else UnsubTopics.add("SensorB");
        
        if(this.TopicCCheckBox.isSelected()){
            SubTopics.add("SensorC");
            qos.add(0);
        } else UnsubTopics.add("SensorC");
        
        try {
            if(this.MqttV5){
                    if (!SubTopics.isEmpty())
                        this.v5Executor.subscribe(SubTopics.toArray(new String[SubTopics.size()]), qos.stream().mapToInt(i->i).toArray());
                    if (!UnsubTopics.isEmpty())
                        this.v5Executor.unsubscribe(UnsubTopics.toArray(new String[UnsubTopics.size()]));
            } else {
                if (!SubTopics.isEmpty())
                    this.v3Executor.subscribe(SubTopics.toArray(new String[SubTopics.size()]), qos.stream().mapToInt(i->i).toArray());
                if (!UnsubTopics.isEmpty())
                    this.v3Executor.unsubscribe(UnsubTopics.toArray(new String[UnsubTopics.size()]));
            }
        } catch (MqttException | org.eclipse.paho.mqttv5.common.MqttException ex) {
            Logger.getLogger(SubscriberGUIFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SubUnsubButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SubscriberGUIFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SubscriberGUIFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SubscriberGUIFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SubscriberGUIFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea LastMsgTextArea;
    private javax.swing.JTextArea RecordsTextArea;
    private javax.swing.JButton SubUnsubButton;
    private javax.swing.JLabel TitleLabel;
    private javax.swing.JCheckBox TopicACheckBox;
    private javax.swing.JCheckBox TopicBCheckBox;
    private javax.swing.JCheckBox TopicCCheckBox;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

    public void displayMessages(String msg){
        Gson g = new Gson();  
        SensorRecord s = g.fromJson(msg, SensorRecord.class);
        String displayMsg = "Sensor ID: " + s.getSensorID() + "\nSensor Description: " + 
                s.getSensorDescription() + "\nSensor Value: " + Integer.toString(s.getSensorValue()) + "ºC\n";
        this.RecordsTextArea.append(displayMsg);
        this.LastMsgTextArea.setText(displayMsg);
    }
}
